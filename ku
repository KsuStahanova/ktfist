// Класс заково
public class Order {
    private int orderId;
    private double totalAmount;
    private Date orderDate;
   
}


// Счет
public class Invoice {
    private int invoiceId;
    private double amount;
    private Date invoiceDate;
    
}


// Док об оплате 
public class PaymentDocument {
    private int paymentId;
    private double paymentAmount;
    private Date paymentDate;
    
}


// Накладная

public class Waybill {
    private int waybillId;
    private String products;
    private Date shippingDate;
   
}







// интерфейс DocumentService
public interface DocumentService {
    public void createOrder(Order order);
    public void createInvoice(Invoice invoice);
    public void createPaymentDocument(PaymentDocument paymentDocument);
    public void createWaybill(Waybill waybill);
    public void displayAllDocuments();
}



// Реалиа
@Service
public class DocumentServiceImpl implements DocumentService {
    private List<Order> orders = new ArrayList<>();
    private List<Invoice> invoices = new ArrayList<>();
    private List<PaymentDocument> paymentDocuments = new ArrayList<>();
    private List<Waybill> waybills = new ArrayList<>();
    
    public void createOrder(Order order) {
        orders.add(order);
    }
    
    public void createInvoice(Invoice invoice) {
        invoices.add(invoice);
    }
    
    public void createPaymentDocument(PaymentDocument paymentDocument) {
        paymentDocuments.add(paymentDocument);
    }
    
    public void createWaybill(Waybill waybill) {
        waybills.add(waybill);
    }
    
    public void displayAllDocuments() {
        // Логика для вывода всех документов
        System.out.println("Заказы: " + orders);
        System.out.println("Счета: " + invoices);
        System.out.println("Документы оплаты: " + paymentDocuments);
        System.out.println("Накладные: " + waybills);
    }
}


// MainApp
@SpringBootApplication
public class MainApp {
    
    @Autowired
    private DocumentService documentService;
    
    public static void main(String[] args) {
        SpringApplication.run(MainApp.class, args);
    }

    @Override
    public void run(ApplicationArguments args) throws Exception {
        Order order = new Order();
        Invoice invoice = new Invoice();
        PaymentDocument paymentDocument = new PaymentDocument();
        Waybill waybill = new Waybill();
        
        documentService.createOrder(order);
        documentService.createInvoice(invoice);
        documentService.createPaymentDocument(paymentDocument);
        documentService.createWaybill(waybill);
        
        documentService.displayAllDocuments();
    }
}

/
